# Maven
- task: JavaToolInstaller@1
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
# Configurar Java explícitamente
- task: UseJava@1
  displayName: 'Set up Java 11'
  inputs:
    version: '11'  # Cambia esta versión si necesitas otra
    jdkArchitecture: 'x64'

# Ejecutar Maven
- task: Maven@3
  displayName: 'Maven app/pom.xml'
  inputs:
    mavenPomFile: 'app/pom.xml'
    codeCoverageToolOption: Cobertura

# Copiar archivos generados
- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    preserveTimestamp: true
  condition: succeededOrFailed()

# Publicar artefactos de la compilación
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: succeededOrFailed()
- task: JavaToolInstaller@1
  inputs:
    versionSpec: '8'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'